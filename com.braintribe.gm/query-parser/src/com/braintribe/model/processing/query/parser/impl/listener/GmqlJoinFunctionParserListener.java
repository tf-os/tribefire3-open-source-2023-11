// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
package com.braintribe.model.processing.query.parser.impl.listener;

import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.JoinFunctionContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.ListIndexContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.MapKeyContext;
import com.braintribe.model.processing.query.parser.impl.context.JoinFunctionCustomContext;
import com.braintribe.model.processing.query.parser.impl.context.basetype.DefaultCustomContext;
import com.braintribe.model.query.Join;
import com.braintribe.model.query.functions.ListIndex;
import com.braintribe.model.query.functions.MapKey;

public abstract class GmqlJoinFunctionParserListener extends GmqlSelectQueryParserListener {

	@Override
	public void exitJoinFunction(JoinFunctionContext ctx) {
		propagateChildResult(ctx);
	}

	@Override
	public void exitListIndex(ListIndexContext ctx) {
		String alias = ((DefaultCustomContext) takeValue(ctx.alias()).cast()).getReturnValue();
		Join join = acquireJoin(alias);
		ListIndex listIndex = $.listIndex(join);
		addToObjectsWithSourcesList(listIndex);
		setValue(ctx, new JoinFunctionCustomContext(listIndex));
	}

	@Override
	public void exitMapKey(MapKeyContext ctx) {
		String alias = ((DefaultCustomContext) takeValue(ctx.alias()).cast()).getReturnValue();
		Join join = acquireJoin(alias);
		MapKey mapKey = $.mapKey(join);
		addToObjectsWithSourcesList(mapKey);
		setValue(ctx, new JoinFunctionCustomContext(mapKey));
	}

}
