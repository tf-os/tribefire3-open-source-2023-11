// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
package com.braintribe.model.processing.manipulation.parser.impl.listener;

import org.antlr.v4.runtime.ParserRuleContext;

import com.braintribe.model.processing.manipulation.parser.impl.autogenerated.GmmlParserListener;
import com.braintribe.utils.collection.api.IStack;
import com.braintribe.utils.collection.impl.ArrayStack;

public abstract class GmmlBasicParserListener implements GmmlParserListener {

	private final IStack<Object> stack = new ArrayStack<>();
	
	protected <T> T pop() {
		return (T) stack.pop();
	}

	protected <T> T peek() {
		return (T) stack.peek();
	}

	protected void push(Object value) {
		stack.push(value);
	}

	@SuppressWarnings("unused")
	private final  int depth = 0; // only used in commented code

	@Override
	public void enterEveryRule(ParserRuleContext ctx) {
//		depth++;
//		StringBuilder indent = new StringBuilder();
//		for (int i = 0; i < depth; i++)
//			indent.append(" ");
//		System.out.println(indent + "enter "+ ctx.getClass().getSimpleName());
	}

	@Override
	public void exitEveryRule(ParserRuleContext ctx) {
//		StringBuilder indent = new StringBuilder();
//		for (int i = 0; i < depth; i++)
//			indent.append(" ");
//		System.out.println(indent + "exit " + ctx.getClass().getSimpleName());
//		depth--;
	}

}
