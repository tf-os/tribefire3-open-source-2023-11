// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
package com.braintribe.model.processing.manipulation.parser.impl.autogenerated;

import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link GmmlParser}.
 */
public interface GmmlParserListener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by {@link GmmlParser#blockSequence}.
	 * @param ctx the parse tree
	 */
	void enterBlockSequence(GmmlParser.BlockSequenceContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#blockSequence}.
	 * @param ctx the parse tree
	 */
	void exitBlockSequence(GmmlParser.BlockSequenceContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#block}.
	 * @param ctx the parse tree
	 */
	void enterBlock(GmmlParser.BlockContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#block}.
	 * @param ctx the parse tree
	 */
	void exitBlock(GmmlParser.BlockContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#manipulationBlocks}.
	 * @param ctx the parse tree
	 */
	void enterManipulationBlocks(GmmlParser.ManipulationBlocksContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#manipulationBlocks}.
	 * @param ctx the parse tree
	 */
	void exitManipulationBlocks(GmmlParser.ManipulationBlocksContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#manipulationBlock}.
	 * @param ctx the parse tree
	 */
	void enterManipulationBlock(GmmlParser.ManipulationBlockContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#manipulationBlock}.
	 * @param ctx the parse tree
	 */
	void exitManipulationBlock(GmmlParser.ManipulationBlockContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#statement}.
	 * @param ctx the parse tree
	 */
	void enterStatement(GmmlParser.StatementContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#statement}.
	 * @param ctx the parse tree
	 */
	void exitStatement(GmmlParser.StatementContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#variableStatement}.
	 * @param ctx the parse tree
	 */
	void enterVariableStatement(GmmlParser.VariableStatementContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#variableStatement}.
	 * @param ctx the parse tree
	 */
	void exitVariableStatement(GmmlParser.VariableStatementContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#listElement}.
	 * @param ctx the parse tree
	 */
	void enterListElement(GmmlParser.ListElementContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#listElement}.
	 * @param ctx the parse tree
	 */
	void exitListElement(GmmlParser.ListElementContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#setElement}.
	 * @param ctx the parse tree
	 */
	void enterSetElement(GmmlParser.SetElementContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#setElement}.
	 * @param ctx the parse tree
	 */
	void exitSetElement(GmmlParser.SetElementContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#listValue}.
	 * @param ctx the parse tree
	 */
	void enterListValue(GmmlParser.ListValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#listValue}.
	 * @param ctx the parse tree
	 */
	void exitListValue(GmmlParser.ListValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#setValue}.
	 * @param ctx the parse tree
	 */
	void enterSetValue(GmmlParser.SetValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#setValue}.
	 * @param ctx the parse tree
	 */
	void exitSetValue(GmmlParser.SetValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#mapEntry}.
	 * @param ctx the parse tree
	 */
	void enterMapEntry(GmmlParser.MapEntryContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#mapEntry}.
	 * @param ctx the parse tree
	 */
	void exitMapEntry(GmmlParser.MapEntryContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#mapValue}.
	 * @param ctx the parse tree
	 */
	void enterMapValue(GmmlParser.MapValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#mapValue}.
	 * @param ctx the parse tree
	 */
	void exitMapValue(GmmlParser.MapValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#assignableValue}.
	 * @param ctx the parse tree
	 */
	void enterAssignableValue(GmmlParser.AssignableValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#assignableValue}.
	 * @param ctx the parse tree
	 */
	void exitAssignableValue(GmmlParser.AssignableValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#collectionDeltaValue}.
	 * @param ctx the parse tree
	 */
	void enterCollectionDeltaValue(GmmlParser.CollectionDeltaValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#collectionDeltaValue}.
	 * @param ctx the parse tree
	 */
	void exitCollectionDeltaValue(GmmlParser.CollectionDeltaValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#singleDeltaValue}.
	 * @param ctx the parse tree
	 */
	void enterSingleDeltaValue(GmmlParser.SingleDeltaValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#singleDeltaValue}.
	 * @param ctx the parse tree
	 */
	void exitSingleDeltaValue(GmmlParser.SingleDeltaValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#listDeltaValue}.
	 * @param ctx the parse tree
	 */
	void enterListDeltaValue(GmmlParser.ListDeltaValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#listDeltaValue}.
	 * @param ctx the parse tree
	 */
	void exitListDeltaValue(GmmlParser.ListDeltaValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#setDeltaValue}.
	 * @param ctx the parse tree
	 */
	void enterSetDeltaValue(GmmlParser.SetDeltaValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#setDeltaValue}.
	 * @param ctx the parse tree
	 */
	void exitSetDeltaValue(GmmlParser.SetDeltaValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#mapDeltaValue}.
	 * @param ctx the parse tree
	 */
	void enterMapDeltaValue(GmmlParser.MapDeltaValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#mapDeltaValue}.
	 * @param ctx the parse tree
	 */
	void exitMapDeltaValue(GmmlParser.MapDeltaValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#manipulation}.
	 * @param ctx the parse tree
	 */
	void enterManipulation(GmmlParser.ManipulationContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#manipulation}.
	 * @param ctx the parse tree
	 */
	void exitManipulation(GmmlParser.ManipulationContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#propertyManipulation}.
	 * @param ctx the parse tree
	 */
	void enterPropertyManipulation(GmmlParser.PropertyManipulationContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#propertyManipulation}.
	 * @param ctx the parse tree
	 */
	void exitPropertyManipulation(GmmlParser.PropertyManipulationContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#propertyOwner}.
	 * @param ctx the parse tree
	 */
	void enterPropertyOwner(GmmlParser.PropertyOwnerContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#propertyOwner}.
	 * @param ctx the parse tree
	 */
	void exitPropertyOwner(GmmlParser.PropertyOwnerContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#manipulationOperation}.
	 * @param ctx the parse tree
	 */
	void enterManipulationOperation(GmmlParser.ManipulationOperationContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#manipulationOperation}.
	 * @param ctx the parse tree
	 */
	void exitManipulationOperation(GmmlParser.ManipulationOperationContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#changeValue}.
	 * @param ctx the parse tree
	 */
	void enterChangeValue(GmmlParser.ChangeValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#changeValue}.
	 * @param ctx the parse tree
	 */
	void exitChangeValue(GmmlParser.ChangeValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#add}.
	 * @param ctx the parse tree
	 */
	void enterAdd(GmmlParser.AddContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#add}.
	 * @param ctx the parse tree
	 */
	void exitAdd(GmmlParser.AddContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#remove}.
	 * @param ctx the parse tree
	 */
	void enterRemove(GmmlParser.RemoveContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#remove}.
	 * @param ctx the parse tree
	 */
	void exitRemove(GmmlParser.RemoveContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#clear}.
	 * @param ctx the parse tree
	 */
	void enterClear(GmmlParser.ClearContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#clear}.
	 * @param ctx the parse tree
	 */
	void exitClear(GmmlParser.ClearContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#deleteManipulation}.
	 * @param ctx the parse tree
	 */
	void enterDeleteManipulation(GmmlParser.DeleteManipulationContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#deleteManipulation}.
	 * @param ctx the parse tree
	 */
	void exitDeleteManipulation(GmmlParser.DeleteManipulationContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#customManipulation}.
	 * @param ctx the parse tree
	 */
	void enterCustomManipulation(GmmlParser.CustomManipulationContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#customManipulation}.
	 * @param ctx the parse tree
	 */
	void exitCustomManipulation(GmmlParser.CustomManipulationContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#customInstance}.
	 * @param ctx the parse tree
	 */
	void enterCustomInstance(GmmlParser.CustomInstanceContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#customInstance}.
	 * @param ctx the parse tree
	 */
	void exitCustomInstance(GmmlParser.CustomInstanceContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#propertyEntry}.
	 * @param ctx the parse tree
	 */
	void enterPropertyEntry(GmmlParser.PropertyEntryContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#propertyEntry}.
	 * @param ctx the parse tree
	 */
	void exitPropertyEntry(GmmlParser.PropertyEntryContext ctx);
	/**
	 * Enter a parse tree produced by the {@code qualifiedTypeAssignment}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void enterQualifiedTypeAssignment(GmmlParser.QualifiedTypeAssignmentContext ctx);
	/**
	 * Exit a parse tree produced by the {@code qualifiedTypeAssignment}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void exitQualifiedTypeAssignment(GmmlParser.QualifiedTypeAssignmentContext ctx);
	/**
	 * Enter a parse tree produced by the {@code instanceCreation}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void enterInstanceCreation(GmmlParser.InstanceCreationContext ctx);
	/**
	 * Exit a parse tree produced by the {@code instanceCreation}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void exitInstanceCreation(GmmlParser.InstanceCreationContext ctx);
	/**
	 * Enter a parse tree produced by the {@code instanceLookup}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void enterInstanceLookup(GmmlParser.InstanceLookupContext ctx);
	/**
	 * Exit a parse tree produced by the {@code instanceLookup}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void exitInstanceLookup(GmmlParser.InstanceLookupContext ctx);
	/**
	 * Enter a parse tree produced by the {@code instanceAcquire}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void enterInstanceAcquire(GmmlParser.InstanceAcquireContext ctx);
	/**
	 * Exit a parse tree produced by the {@code instanceAcquire}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void exitInstanceAcquire(GmmlParser.InstanceAcquireContext ctx);
	/**
	 * Enter a parse tree produced by the {@code valueAssignment}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void enterValueAssignment(GmmlParser.ValueAssignmentContext ctx);
	/**
	 * Exit a parse tree produced by the {@code valueAssignment}
	 * labeled alternative in {@link GmmlParser#variableAssignment}.
	 * @param ctx the parse tree
	 */
	void exitValueAssignment(GmmlParser.ValueAssignmentContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#variable}.
	 * @param ctx the parse tree
	 */
	void enterVariable(GmmlParser.VariableContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#variable}.
	 * @param ctx the parse tree
	 */
	void exitVariable(GmmlParser.VariableContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#fullyQualifiedIdentifier}.
	 * @param ctx the parse tree
	 */
	void enterFullyQualifiedIdentifier(GmmlParser.FullyQualifiedIdentifierContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#fullyQualifiedIdentifier}.
	 * @param ctx the parse tree
	 */
	void exitFullyQualifiedIdentifier(GmmlParser.FullyQualifiedIdentifierContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#variableValue}.
	 * @param ctx the parse tree
	 */
	void enterVariableValue(GmmlParser.VariableValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#variableValue}.
	 * @param ctx the parse tree
	 */
	void exitVariableValue(GmmlParser.VariableValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#qualifiedType}.
	 * @param ctx the parse tree
	 */
	void enterQualifiedType(GmmlParser.QualifiedTypeContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#qualifiedType}.
	 * @param ctx the parse tree
	 */
	void exitQualifiedType(GmmlParser.QualifiedTypeContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#value}.
	 * @param ctx the parse tree
	 */
	void enterValue(GmmlParser.ValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#value}.
	 * @param ctx the parse tree
	 */
	void exitValue(GmmlParser.ValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#variableOrAssignmentValue}.
	 * @param ctx the parse tree
	 */
	void enterVariableOrAssignmentValue(GmmlParser.VariableOrAssignmentValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#variableOrAssignmentValue}.
	 * @param ctx the parse tree
	 */
	void exitVariableOrAssignmentValue(GmmlParser.VariableOrAssignmentValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#variableAssignmentValue}.
	 * @param ctx the parse tree
	 */
	void enterVariableAssignmentValue(GmmlParser.VariableAssignmentValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#variableAssignmentValue}.
	 * @param ctx the parse tree
	 */
	void exitVariableAssignmentValue(GmmlParser.VariableAssignmentValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#enumValue}.
	 * @param ctx the parse tree
	 */
	void enterEnumValue(GmmlParser.EnumValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#enumValue}.
	 * @param ctx the parse tree
	 */
	void exitEnumValue(GmmlParser.EnumValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#literalValue}.
	 * @param ctx the parse tree
	 */
	void enterLiteralValue(GmmlParser.LiteralValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#literalValue}.
	 * @param ctx the parse tree
	 */
	void exitLiteralValue(GmmlParser.LiteralValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#dateValue}.
	 * @param ctx the parse tree
	 */
	void enterDateValue(GmmlParser.DateValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#dateValue}.
	 * @param ctx the parse tree
	 */
	void exitDateValue(GmmlParser.DateValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#calendarOffsetValue}.
	 * @param ctx the parse tree
	 */
	void enterCalendarOffsetValue(GmmlParser.CalendarOffsetValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#calendarOffsetValue}.
	 * @param ctx the parse tree
	 */
	void exitCalendarOffsetValue(GmmlParser.CalendarOffsetValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#dateOffset}.
	 * @param ctx the parse tree
	 */
	void enterDateOffset(GmmlParser.DateOffsetContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#dateOffset}.
	 * @param ctx the parse tree
	 */
	void exitDateOffset(GmmlParser.DateOffsetContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#timeZoneOffset}.
	 * @param ctx the parse tree
	 */
	void enterTimeZoneOffset(GmmlParser.TimeZoneOffsetContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#timeZoneOffset}.
	 * @param ctx the parse tree
	 */
	void exitTimeZoneOffset(GmmlParser.TimeZoneOffsetContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#stringValue}.
	 * @param ctx the parse tree
	 */
	void enterStringValue(GmmlParser.StringValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#stringValue}.
	 * @param ctx the parse tree
	 */
	void exitStringValue(GmmlParser.StringValueContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscB}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscB(GmmlParser.EscBContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscB}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscB(GmmlParser.EscBContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscBS}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscBS(GmmlParser.EscBSContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscBS}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscBS(GmmlParser.EscBSContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscF}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscF(GmmlParser.EscFContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscF}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscF(GmmlParser.EscFContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscN}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscN(GmmlParser.EscNContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscN}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscN(GmmlParser.EscNContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscR}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscR(GmmlParser.EscRContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscR}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscR(GmmlParser.EscRContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscSQ}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscSQ(GmmlParser.EscSQContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscSQ}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscSQ(GmmlParser.EscSQContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EscT}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterEscT(GmmlParser.EscTContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EscT}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitEscT(GmmlParser.EscTContext ctx);
	/**
	 * Enter a parse tree produced by the {@code UnicodeEscape}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void enterUnicodeEscape(GmmlParser.UnicodeEscapeContext ctx);
	/**
	 * Exit a parse tree produced by the {@code UnicodeEscape}
	 * labeled alternative in {@link GmmlParser#escape}.
	 * @param ctx the parse tree
	 */
	void exitUnicodeEscape(GmmlParser.UnicodeEscapeContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#plainContent}.
	 * @param ctx the parse tree
	 */
	void enterPlainContent(GmmlParser.PlainContentContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#plainContent}.
	 * @param ctx the parse tree
	 */
	void exitPlainContent(GmmlParser.PlainContentContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#nullValue}.
	 * @param ctx the parse tree
	 */
	void enterNullValue(GmmlParser.NullValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#nullValue}.
	 * @param ctx the parse tree
	 */
	void exitNullValue(GmmlParser.NullValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#booleanValue}.
	 * @param ctx the parse tree
	 */
	void enterBooleanValue(GmmlParser.BooleanValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#booleanValue}.
	 * @param ctx the parse tree
	 */
	void exitBooleanValue(GmmlParser.BooleanValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#decimalValue}.
	 * @param ctx the parse tree
	 */
	void enterDecimalValue(GmmlParser.DecimalValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#decimalValue}.
	 * @param ctx the parse tree
	 */
	void exitDecimalValue(GmmlParser.DecimalValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#floatValue}.
	 * @param ctx the parse tree
	 */
	void enterFloatValue(GmmlParser.FloatValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#floatValue}.
	 * @param ctx the parse tree
	 */
	void exitFloatValue(GmmlParser.FloatValueContext ctx);
	/**
	 * Enter a parse tree produced by {@link GmmlParser#doubleValue}.
	 * @param ctx the parse tree
	 */
	void enterDoubleValue(GmmlParser.DoubleValueContext ctx);
	/**
	 * Exit a parse tree produced by {@link GmmlParser#doubleValue}.
	 * @param ctx the parse tree
	 */
	void exitDoubleValue(GmmlParser.DoubleValueContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IntegerHexRepresentation}
	 * labeled alternative in {@link GmmlParser#integerValue}.
	 * @param ctx the parse tree
	 */
	void enterIntegerHexRepresentation(GmmlParser.IntegerHexRepresentationContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IntegerHexRepresentation}
	 * labeled alternative in {@link GmmlParser#integerValue}.
	 * @param ctx the parse tree
	 */
	void exitIntegerHexRepresentation(GmmlParser.IntegerHexRepresentationContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IntegerDecimalRepresenation}
	 * labeled alternative in {@link GmmlParser#integerValue}.
	 * @param ctx the parse tree
	 */
	void enterIntegerDecimalRepresenation(GmmlParser.IntegerDecimalRepresenationContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IntegerDecimalRepresenation}
	 * labeled alternative in {@link GmmlParser#integerValue}.
	 * @param ctx the parse tree
	 */
	void exitIntegerDecimalRepresenation(GmmlParser.IntegerDecimalRepresenationContext ctx);
	/**
	 * Enter a parse tree produced by the {@code LongHexRepresentation}
	 * labeled alternative in {@link GmmlParser#longValue}.
	 * @param ctx the parse tree
	 */
	void enterLongHexRepresentation(GmmlParser.LongHexRepresentationContext ctx);
	/**
	 * Exit a parse tree produced by the {@code LongHexRepresentation}
	 * labeled alternative in {@link GmmlParser#longValue}.
	 * @param ctx the parse tree
	 */
	void exitLongHexRepresentation(GmmlParser.LongHexRepresentationContext ctx);
	/**
	 * Enter a parse tree produced by the {@code LongDecimalRepresenation}
	 * labeled alternative in {@link GmmlParser#longValue}.
	 * @param ctx the parse tree
	 */
	void enterLongDecimalRepresenation(GmmlParser.LongDecimalRepresenationContext ctx);
	/**
	 * Exit a parse tree produced by the {@code LongDecimalRepresenation}
	 * labeled alternative in {@link GmmlParser#longValue}.
	 * @param ctx the parse tree
	 */
	void exitLongDecimalRepresenation(GmmlParser.LongDecimalRepresenationContext ctx);
}