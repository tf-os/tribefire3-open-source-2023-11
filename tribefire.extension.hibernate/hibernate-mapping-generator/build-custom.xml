<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022

This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
-->
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:bt="antlib:com.braintribe.build.ant.tasks" basedir="." default="dist" name="hibernate-mapping-generator">
    <bt:import artifact="com.braintribe.devrock.ant:common-ant-script#1.0" useCase="DEVROCK"/>
    <property location="src" name="src"/>
    <property location="build" name="build"/>
    <property location="dist" name="dist"/>
    <property location="res" name="res"/>
    <target depends="common-init" name="init">
        <bt:pom file="pom.xml" id="maven.project"/>
        <property name="versionedName" value="${maven.project.artifactId}-${maven.project.version}"/>
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>
    	

	
    <target depends="init" description="compile the source " name="compile">
        <bt:dependencies pathId="compile.classpath" useScope="compile">
            <bt:pom refid="maven.project"/>
        </bt:dependencies>
        <!-- Compile the java code from ${src} into ${build} -->
        <javac debug="true" debuglevel="lines,source,vars" destdir="${build}" encoding="UTF-8" source="1.8" srcdir="${src}" target="1.8">
            <include name="**/*.java"/>
            <classpath refid="compile.classpath"/>
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target depends="clean, compile" description="generate the distribution" name="dist">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>
        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar basedir="${build}" jarfile="${dist}/lib/${versionedName}.jar">
            <fileset dir="${src}">
                <include name="templates/**"/>
            </fileset>
        </jar>
        <jar basedir="${src}" jarfile="${dist}/${versionedName}-sources.jar"/>
    </target>
    <target depends="dist" description="install to local maven repository" name="install">
        <bt:install file="dist/lib/${versionedName}.jar">
            <pom refid="maven.project"/>
            <attach classifier="sources" file="dist/${versionedName}-sources.jar"/>
        </bt:install>
    </target>
    	
    <target description="clean up" name="clean">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
    <target depends="init" description="Run the mapping generator" name="run">
        <bt:dependencies pathId="compile.classpath" useScope="compile">
            <bt:pom refid="maven.project"/>
        </bt:dependencies>
        <java classname="com.braintribe.model.processing.deployment.hibernate.HbmGeneratorMain">
            <arg value="${model.source}"/>
            <arg value="${model.target}"/>
            <arg value="${model.prefix}"/>
            <arg value="${model.uppercase}"/>
            <classpath>
                <pathelement path="build"/>
            </classpath>
            <classpath refid="compile.classpath"/>
        </java>
    </target>
    <target depends="dist" description="Creates a stand-alone package that can be extracted and run everywhere (without artifacts, ant, maven, etc.)" name="package">
        <bt:dependencies filesetId="runtime.fileset" useScope="runtime">
            <bt:pom refid="maven.project"/>
        </bt:dependencies>
        <copy todir="${dist}/lib">
            <fileset refid="runtime.fileset"/>
            <mapper type="flatten"/>
        </copy>
        <delete dir="${dist}/package"/>
        <mkdir dir="${dist}/package/lib"/>
        <copy todir="${dist}/package/lib">
            <fileset dir="${dist}/lib"/>
        </copy>
        <copy todir="${dist}/package">
            <fileset dir="${res}/package"/>
        </copy>
        <zip basedir="${dist}/package" destfile="${dist}/${versionedName}.zip"/>
    </target>
</project>
