// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
package com.braintribe.model.processing.deployment.hibernate.mapping.db;

import com.braintribe.model.processing.deployment.hibernate.mapping.HbmXmlGenerationContext;

public class Db2NamingLimitations extends NamingLimitations {
	
	Db2NamingLimitations(HbmXmlGenerationContext context) {
		super(context);
		setTableNameMaxLength(128);
		setColumnNameMaxLength(128);
		//setColumnNameIllegalLeadingCharsPattern("^_+");
		setupReservedWords();
	}

	/**
	 * @see <a href="http://publib.boulder.ibm.com/infocenter/dzichelp/v2r2/topic/com.ibm.db2z10.doc.sqlref/src/tpc/db2z_reservedwords.htm">Db2 Documentation</a>
	 */
	private void setupReservedWords() {
		registerReserved("add");
		registerReserved("after");
		registerReserved("all");
		registerReserved("allocate");
		registerReserved("allow");
		registerReserved("alter");
		registerReserved("and");
		registerReserved("any");
		registerReserved("as");
		registerReserved("asensitive");
		registerReserved("associate");
		registerReserved("asutime");
		registerReserved("at");
		registerReserved("audit");
		registerReserved("aux");
		registerReserved("auxiliary");
		registerReserved("before");
		registerReserved("begin");
		registerReserved("between");
		registerReserved("bufferpool");
		registerReserved("by");
		registerReserved("call");
		registerReserved("capture");
		registerReserved("cascaded");
		registerReserved("case");
		registerReserved("cast");
		registerReserved("ccsid");
		registerReserved("char");
		registerReserved("character");
		registerReserved("check");
		registerReserved("clone");
		registerReserved("close");
		registerReserved("cluster");
		registerReserved("collection");
		registerReserved("collid");
		registerReserved("column");
		registerReserved("comment");
		registerReserved("commit");
		registerReserved("concat");
		registerReserved("condition");
		registerReserved("connect");
		registerReserved("connection");
		registerReserved("constraint");
		registerReserved("contains");
		registerReserved("content");
		registerReserved("continue");
		registerReserved("create");
		registerReserved("current");
		registerReserved("current_date");
		registerReserved("current_lc_ctype");
		registerReserved("current_path");
		registerReserved("current_schema");
		registerReserved("current_time");
		registerReserved("current_timestamp");
		registerReserved("cursor");
		registerReserved("data");
		registerReserved("database");
		registerReserved("day");
		registerReserved("days");
		registerReserved("dbinfo");
		registerReserved("declare");
		registerReserved("default");
		registerReserved("delete");
		registerReserved("descriptor");
		registerReserved("deterministic");
		registerReserved("disable");
		registerReserved("disallow");
		registerReserved("distinct");
		registerReserved("do");
		registerReserved("document");
		registerReserved("double");
		registerReserved("drop");
		registerReserved("dssize");
		registerReserved("dynamic");
		registerReserved("editproc");
		registerReserved("else");
		registerReserved("elseif");
		registerReserved("encoding");
		registerReserved("encryption");
		registerReserved("end");
		registerReserved("ending");
		registerReserved("end-exec");
		registerReserved("erase");
		registerReserved("escape");
		registerReserved("except");
		registerReserved("exception");
		registerReserved("execute");
		registerReserved("exists");
		registerReserved("exit");
		registerReserved("explain");
		registerReserved("external");
		registerReserved("fenced");
		registerReserved("fetch");
		registerReserved("fieldproc");
		registerReserved("final");
		registerReserved("first");
		registerReserved("for");
		registerReserved("free");
		registerReserved("from");
		registerReserved("full");
		registerReserved("function");
		registerReserved("generated");
		registerReserved("get");
		registerReserved("global");
		registerReserved("go");
		registerReserved("goto");
		registerReserved("grant");
		registerReserved("group");
		registerReserved("handler");
		registerReserved("having");
		registerReserved("hold");
		registerReserved("hour");
		registerReserved("hours");
		registerReserved("if");
		registerReserved("immediate");
		registerReserved("in");
		registerReserved("inclusive");
		registerReserved("index");
		registerReserved("inherit");
		registerReserved("inner");
		registerReserved("inout");
		registerReserved("insensitive");
		registerReserved("insert");
		registerReserved("intersect");
		registerReserved("into");
		registerReserved("is");
		registerReserved("isobid");
		registerReserved("iterate");
		registerReserved("jar");
		registerReserved("join");
		registerReserved("keep");
		registerReserved("key");
		registerReserved("label");
		registerReserved("language");
		registerReserved("last");
		registerReserved("lc_ctype");
		registerReserved("leave");
		registerReserved("left");
		registerReserved("like");
		registerReserved("local");
		registerReserved("locale");
		registerReserved("locator");
		registerReserved("locators");
		registerReserved("lock");
		registerReserved("lockmax");
		registerReserved("locksize");
		registerReserved("long");
		registerReserved("loop");
		registerReserved("maintained");
		registerReserved("materialized");
		registerReserved("microsecond");
		registerReserved("microseconds");
		registerReserved("minute");
		registerReserved("minutes");
		registerReserved("modifies");
		registerReserved("month");
		registerReserved("months");
		registerReserved("next");
		registerReserved("nextval");
		registerReserved("no");
		registerReserved("none");
		registerReserved("not");
		registerReserved("null");
		registerReserved("nulls");
		registerReserved("numparts");
		registerReserved("obid");
		registerReserved("of");
		registerReserved("old");
		registerReserved("on");
		registerReserved("open");
		registerReserved("optimization");
		registerReserved("optimize");
		registerReserved("or");
		registerReserved("order");
		registerReserved("organization");
		registerReserved("out");
		registerReserved("outer");
		registerReserved("package");
		registerReserved("parameter");
		registerReserved("part");
		registerReserved("padded");
		registerReserved("partition");
		registerReserved("partitioned");
		registerReserved("partitioning");
		registerReserved("path");
		registerReserved("piecesize");
		registerReserved("period");
		registerReserved("plan");
		registerReserved("precision");
		registerReserved("prepare");
		registerReserved("prevval");
		registerReserved("prior");
		registerReserved("priqty");
		registerReserved("privileges");
		registerReserved("procedure");
		registerReserved("program");
		registerReserved("psid");
		registerReserved("public");
		registerReserved("query");
		registerReserved("queryno");
		registerReserved("reads");
		registerReserved("references");
		registerReserved("refresh");
		registerReserved("resignal");
		registerReserved("release");
		registerReserved("rename");
		registerReserved("repeat");
		registerReserved("restrict");
		registerReserved("result");
		registerReserved("result_set_locator");
		registerReserved("return");
		registerReserved("returns");
		registerReserved("revoke");
		registerReserved("right");
		registerReserved("role");
		registerReserved("rollback");
		registerReserved("round_ceiling");
		registerReserved("round_down");
		registerReserved("round_floor");
		registerReserved("round_half_down");
		registerReserved("round_half_even");
		registerReserved("round_half_up");
		registerReserved("round_up");
		registerReserved("row");
		registerReserved("rowset");
		registerReserved("run");
		registerReserved("savepoint");
		registerReserved("schema");
		registerReserved("scratchpad");
		registerReserved("second");
		registerReserved("seconds");
		registerReserved("secqty");
		registerReserved("security");
		registerReserved("sequence");
		registerReserved("select");
		registerReserved("sensitive");
		registerReserved("session_user");
		registerReserved("set");
		registerReserved("signal");
		registerReserved("simple");
		registerReserved("some");
		registerReserved("source");
		registerReserved("specific");
		registerReserved("standard");
		registerReserved("static");
		registerReserved("statement");
		registerReserved("stay");
		registerReserved("stogroup");
		registerReserved("stores");
		registerReserved("style");
		registerReserved("summary");
		registerReserved("synonym");
		registerReserved("sysdate");
		registerReserved("system");
		registerReserved("systimestamp");
		registerReserved("table");
		registerReserved("tablespace");
		registerReserved("then");
		registerReserved("to");
		registerReserved("trigger");
		registerReserved("truncate");
		registerReserved("type");
		registerReserved("undo");
		registerReserved("union");
		registerReserved("unique");
		registerReserved("until");
		registerReserved("update");
		registerReserved("user");
		registerReserved("using");
		registerReserved("validproc");
		registerReserved("value");
		registerReserved("values");
		registerReserved("variable");
		registerReserved("variant");
		registerReserved("vcat");
		registerReserved("view");
		registerReserved("volatile");
		registerReserved("volumes");
		registerReserved("when");
		registerReserved("whenever");
		registerReserved("where");
		registerReserved("while");
		registerReserved("with");
		registerReserved("wlm");
		registerReserved("xmlexists");
		registerReserved("xmlnamespaces");
		registerReserved("xmlcast");
		registerReserved("year");
		registerReserved("years");
		registerReserved("zone");
	}
	
}
