---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tribefireruntimes.tribefire.cloud
spec:
  group: tribefire.cloud
  names:
    kind: TribefireRuntime
    plural: tribefireruntimes
  scope: ""
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: 'Annotations is an unstructured key value map stored
                  with a resource that may be set by external tools to store and retrieve
                  arbitrary metadata. They are not queryable and should be preserved
                  when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                type: object
              clusterName:
                description: The name of the cluster which the object belongs to.
                  This is used to distinguish resources with same name and namespace
                  in different clusters. This field is not set anywhere right now
                  and apiserver is going to ignore it if set in create or update request.
                type: string
              creationTimestamp:
                description: "CreationTimestamp is a timestamp representing the server
                  time when this object was created. It is not guaranteed to be set
                  in happens-before order across separate operations. Clients may
                  not set this value. It is represented in RFC3339 form and is in
                  UTC. \n Populated by the system. Read-only. Null for lists. More
                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                format: date-time
                type: string
              deletionGracePeriodSeconds:
                description: Number of seconds allowed for this object to gracefully
                  terminate before it will be removed from the system. Only set when
                  deletionTimestamp is also set. May only be shortened. Read-only.
                format: int64
                type: integer
              deletionTimestamp:
                description: "DeletionTimestamp is RFC 3339 date and time at which
                  this resource will be deleted. This field is set by the server when
                  a graceful deletion is requested by the user, and is not directly
                  settable by a client. The resource is expected to be deleted (no
                  longer visible from resource lists, and not reachable by name) after
                  the time in this field, once the finalizers list is empty. As long
                  as the finalizers list contains items, deletion is blocked. Once
                  the deletionTimestamp is set, this value may not be unset or be
                  set further into the future, although it may be shortened or the
                  resource may be deleted prior to this time. For example, a user
                  may request that a pod is deleted in 30 seconds. The Kubelet will
                  react by sending a graceful termination signal to the containers
                  in the pod. After that 30 seconds, the Kubelet will send a hard
                  termination signal (SIGKILL) to the container and after cleanup,
                  remove the pod from the API. In the presence of network partitions,
                  this object may still exist after this timestamp, until an administrator
                  or automated process can determine the resource is fully terminated.
                  If not set, graceful deletion of the object has not been requested.
                  \n Populated by the system when a graceful deletion is requested.
                  Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                format: date-time
                type: string
              finalizers:
                description: Must be empty before the object is deleted from the registry.
                  Each entry is an identifier for the responsible component that will
                  remove the entry from the list. If the deletionTimestamp of the
                  object is non-nil, entries in this list can only be removed.
                items:
                  type: string
                type: array
              generateName:
                description: "GenerateName is an optional prefix, used by the server,
                  to generate a unique name ONLY IF the Name field has not been provided.
                  If this field is used, the name returned to the client will be different
                  than the name passed. This value will also be combined with a unique
                  suffix. The provided value has the same validation rules as the
                  Name field, and may be truncated by the length of the suffix required
                  to make the value unique on the server. \n If this field is specified
                  and the generated name exists, the server will NOT return a 409
                  - instead, it will either return 201 Created or 500 with Reason
                  ServerTimeout indicating a unique name could not be found in the
                  time allotted, and the client should retry (optionally after the
                  time indicated in the Retry-After header). \n Applied only if Name
                  is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
                type: string
              generation:
                description: A sequence number representing a specific generation
                  of the desired state. Populated by the system. Read-only.
                format: int64
                type: integer
              initializers:
                description: "An initializer is a controller which enforces some system
                  invariant at object creation time. This field is a list of initializers
                  that have not yet acted on this object. If nil or empty, this object
                  has been completely initialized. Otherwise, the object is considered
                  uninitialized and is hidden (in list/watch and get calls) from clients
                  that haven't explicitly asked to observe uninitialized objects.
                  \n When an object is created, the system will populate this list
                  with the current set of initializers. Only privileged users may
                  set or modify this list. Once it is empty, it may not be modified
                  further by any user."
                properties:
                  pending:
                    description: Pending is a list of initializers that must execute
                      in order before this object is visible. When the last pending
                      initializer is removed, and no failing result is set, the initializers
                      struct will be set to nil and the object is considered as initialized
                      and visible to all clients.
                    items:
                      properties:
                        name:
                          description: name of the process that is responsible for
                            initializing this object.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  result:
                    description: If result is set with the Failure field, the object
                      will be persisted to storage and then deleted, ensuring that
                      other clients can observe the deletion.
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                        type: string
                      code:
                        description: Suggested HTTP return code for this status, 0
                          if not set.
                        format: int32
                        type: integer
                      details:
                        description: Extended data associated with the reason.  Each
                          reason may define its own extended details. This field is
                          optional and the data returned is not guaranteed to conform
                          to any schema except that defined by the reason type.
                        properties:
                          causes:
                            description: The Causes array includes more details associated
                              with the StatusReason failure. Not all StatusReasons
                              may provide detailed causes.
                            items:
                              properties:
                                field:
                                  description: "The field of the resource that has
                                    caused this error, as named by its JSON serialization.
                                    May include dot and postfix notation for nested
                                    attributes. Arrays are zero-indexed.  Fields may
                                    appear more than once in an array of causes due
                                    to fields having multiple errors. Optional. \n
                                    Examples:   \"name\" - the field \"name\" on the
                                    current resource   \"items[0].name\" - the field
                                    \"name\" on the first array entry in \"items\""
                                  type: string
                                message:
                                  description: A human-readable description of the
                                    cause of the error.  This field may be presented
                                    as-is to a reader.
                                  type: string
                                reason:
                                  description: A machine-readable description of the
                                    cause of the error. If this value is empty there
                                    is no information available.
                                  type: string
                              type: object
                            type: array
                          group:
                            description: The group attribute of the resource associated
                              with the status StatusReason.
                            type: string
                          kind:
                            description: 'The kind attribute of the resource associated
                              with the status StatusReason. On some operations may
                              differ from the requested resource Kind. More info:
                              https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: The name attribute of the resource associated
                              with the status StatusReason (when there is a single
                              name which can be described).
                            type: string
                          retryAfterSeconds:
                            description: If specified, the time in seconds before
                              the operation should be retried. Some errors may indicate
                              the client must take an alternate action - for those
                              errors this field may indicate how long to wait before
                              taking the alternate action.
                            format: int32
                            type: integer
                          uid:
                            description: 'UID of the resource. (when there is a single
                              resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        type: object
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                        type: string
                      message:
                        description: A human-readable description of the status of
                          this operation.
                        type: string
                      metadata:
                        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                        properties:
                          continue:
                            description: continue may be set if the user set a limit
                              on the number of items returned, and indicates that
                              the server has more data available. The value is opaque
                              and may be used to issue another request to the endpoint
                              that served this list to retrieve the next set of available
                              objects. Continuing a consistent list may not be possible
                              if the server configuration has changed or more than
                              a few minutes have passed. The resourceVersion field
                              returned when using this continue value will be identical
                              to the value in the first response, unless you have
                              received this token from an error message.
                            type: string
                          resourceVersion:
                            description: 'String that identifies the server''s internal
                              version of this object that can be used by clients to
                              determine when objects have changed. Value must be treated
                              as opaque by clients and passed unmodified back to the
                              server. Populated by the system. Read-only. More info:
                              https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          selfLink:
                            description: selfLink is a URL representing this object.
                              Populated by the system. Read-only.
                            type: string
                        type: object
                      reason:
                        description: A machine-readable description of why this operation
                          is in the "Failure" status. If this value is empty there
                          is no information available. A Reason clarifies an HTTP
                          status code but does not override it.
                        type: string
                      status:
                        description: 'Status of the operation. One of: "Success" or
                          "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                        type: string
                    type: object
                required:
                - pending
                type: object
              labels:
                additionalProperties:
                  type: string
                description: 'Map of string keys and values that can be used to organize
                  and categorize (scope and select) objects. May match selectors of
                  replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                type: object
              name:
                description: 'Name must be unique within a namespace. Is required
                  when creating resources, although some resources may allow a client
                  to request the generation of an appropriate name automatically.
                  Name is primarily intended for creation idempotence and configuration
                  definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                type: string
              namespace:
                description: "Namespace defines the space within each name must be
                  unique. An empty namespace is equivalent to the \"default\" namespace,
                  but \"default\" is the canonical representation. Not all objects
                  are required to be scoped to a namespace - the value of this field
                  for those objects will be empty. \n Must be a DNS_LABEL. Cannot
                  be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                type: string
              ownerReferences:
                description: List of objects depended by this object. If ALL objects
                  in the list have been deleted, this object will be garbage collected.
                  If this object is managed by a controller, then an entry in this
                  list will point to this controller, with the controller field set
                  to true. There cannot be more than one managing controller.
                items:
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion"
                        finalizer, then the owner cannot be deleted from the key-value
                        store until this reference is removed. Defaults to false.
                        To set this field, a user needs "delete" permission of the
                        owner, otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing
                        controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                  type: object
                type: array
              resourceVersion:
                description: "An opaque value that represents the internal version
                  of this object that can be used by clients to determine when objects
                  have changed. May be used for optimistic concurrency, change detection,
                  and the watch operation on a resource or set of resources. Clients
                  must treat these values as opaque and passed unmodified back to
                  the server. They may only be valid for a particular resource or
                  set of resources. \n Populated by the system. Read-only. Value must
                  be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                type: string
              selfLink:
                description: SelfLink is a URL representing this object. Populated
                  by the system. Read-only.
                type: string
              uid:
                description: "UID is the unique in time and space value for this object.
                  It is typically generated by the server on successful creation of
                  a resource and is not allowed to change on PUT operations. \n Populated
                  by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                type: string
            type: object
          spec:
            properties:
              backend:
                description: The backend configuration for this TribefireRuntime,
                  e.g. configuration for `etcd` backend
                properties:
                  parameters:
                    description: 'Configuration properties for the chosen Tribefire
                      backend, e.g. the `etcd` URL<br/><br/> Defaults (for etcd):
                      `name=''url''` `value=''http://tf-etcd-cluster-client:2379''`'
                    items:
                      properties:
                        name:
                          description: 'name of the backend property<br/><br/> Examples:
                            `username`, `password`, `url`'
                          type: string
                        value:
                          description: 'the value of the backend configuration property
                            Examples: `https://tf-etcd.etcd.svc.cluster.local`, `etcd-user`,
                            `etcd-password`'
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  type:
                    description: 'The backend for Tribefire<br/><br/> Possible values:
                      `activemq`, `etcd` (note: ActiveMQ is supported for compatibility
                      only)'
                    type: string
                type: object
              components:
                description: The list of components for this TribefireRuntime, i.e.
                  `services`, 'control-center` and others
                items:
                  properties:
                    apiPath:
                      description: 'absolute path (starting with `/`) for this component<br/><br/>
                        Example: `/tribefire-control-center`'
                      pattern: ^/[a-z-]*$|^$
                      type: string
                    customHealthCheckPath:
                      description: can be used to specify a custom health check endpoint
                        URI. The default is `/healthz` for non-cartridge components
                        and `/` for cartridges
                      type: string
                    enableJpda:
                      description: 'enables remote debugging capabilities via JPDA<br/><br/>
                        Possible values: `true`, `false`'
                      type: string
                    env:
                      description: The environment for this component. Just a standard
                        `env` section as in `ContainerSpec`
                      items:
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                              using the previous defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. The $(VAR_NAME) syntax
                              can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                              references will never be expanded, regardless of whether
                              the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      it's key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, metadata.labels,
                                  metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    type: string
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or it's
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: 'Docker image to be used for this component.<br/><br/>
                        Example: `dockerregistry.example.com/cloud/tribefire-master`'
                      minLength: 10
                      type: string
                    imageTag:
                      description: 'The image tag for the referenced Docker image<br/><br/>
                        Example: `2.0-latest`'
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Set of labels that should be attached to this component
                      type: object
                    logJson:
                      description: 'Use JSON logging for this component<br/><br/>
                        Possible values: `true`, `false`'
                      type: string
                    logLevel:
                      description: 'The loglevel for this component.<br/><br/> Possible
                        values: `SEVERE`,`WARNING`,`INFO`,`CONFIG`,`FINE`,`FINER`,`FINEST`'
                      enum:
                      - SEVERE
                      - WARNING
                      - INFO
                      - CONFIG
                      - FINE
                      - FINER
                      - FINEST
                      type: string
                    name:
                      description: the name of this component
                      maxLength: 31
                      minLength: 3
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: set of labels for controlling node affinity
                      type: object
                    persistentVolumes:
                      description: list of volumes that should be attached to this
                        component. Should be used together with `persistentVolumeClaims`
                      items:
                        properties:
                          name:
                            description: 'symbolic name of the volume<br/><br/> Example:
                              `nfs-documents`'
                            maxLength: 63
                            type: string
                          volumeClaimName:
                            description: 'The name of the underlying `PersistentVolumeClaim`.
                              Please note that you need to setup the PVC before referencing
                              it here.<br/><br/> Example: `nfs-documents-claim`'
                            maxLength: 63
                            type: string
                          volumeMountPath:
                            description: 'The mount path where the PVC should be available
                              inside the Tribefire pods.<br/><br/> Example: `/nfs/documents`'
                            pattern: ^(/)?([^/\0]+(/)?)+$
                            type: string
                        required:
                        - name
                        - volumeClaimName
                        - volumeMountPath
                        type: object
                      type: array
                    protocol:
                      description: 'The protocol that should be used for the public
                        URL <br/><br/> Possible values: `http`, `https`'
                      enum:
                      - http
                      - https
                      type: string
                    publicUrl:
                      description: 'The publicly accessible URL for this component<br/><br/>
                        Example: `https://demo-documents.tribefire.cloud/services`'
                      pattern: ^https?:\/\/.*$
                      type: string
                    replicas:
                      description: 'number of replicas for this component<br/><br/>
                        Possible values: `1-10`'
                      format: int32
                      maximum: 10
                      minimum: 1
                      type: integer
                    resources:
                      description: The resource requirements for this component. Standard
                        `ResourceRequirements` as per `PodSpec`
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    type:
                      description: type of this component, e.g.`services` or `control-center`
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              databaseType:
                description: The type of the database for this TribefireRuntime
                type: string
              databases:
                description: Any additional (external) database that the runtime might
                  need, e.g. Documents database
                items:
                  properties:
                    credentialsSecretRef:
                      description: 'This `secretRef` points to the secret that contains
                        the database credentials, i.e. username and password to connect
                        to the database. The secret itself should have a `username`
                        and a `password` key that have the related values. <br/><br/>
                        Example: `database-credentials-secret`'
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    databaseName:
                      description: 'The name of the database<br/><br/> Example: `documents`'
                      maxLength: 60
                      minLength: 3
                      type: string
                    envPrefixes:
                      description: 'For every database described by a `DatabaseSpec`
                        there will be a set of environment variables exposed in the
                        `tribefire-services` pods. This set of env vars  contains
                        the following variables: <ul>   <li> `${PREFIX}_DB_URL`   <li>
                        `${PREFIX}_DB_USER`   <li> `${PREFIX}_DB_PASS` </ul> the values
                        for this variables is taken from the `credentialsSecretRef`
                        as well as the `instanceDescriptor` <br/><br/> Example: `DOCUMENTS`'
                      items:
                        type: string
                      type: array
                    instanceDescriptor:
                      description: 'The descriptor/connection string that identifies
                        this database. This can either be a CloudSQL instance descriptor
                        or a JDBC url. <br/><br/> Example: `jdbc:postgresql://1.2.3.4:5432/documents-demo`'
                      type: string
                    name:
                      description: 'a symbolic name to refer to this database.<br/><br/>
                        Example: `tribecell-production`'
                      maxLength: 63
                      minLength: 3
                      type: string
                    serviceAccountSecretKey:
                      description: 'This points to the key of the `serviceAccountSecretRef`
                        where to take the service account JSON from<br/><br/> Example:
                        `service-account.json`'
                      type: string
                    serviceAccountSecretRef:
                      description: 'This `secretRef` points to the secret that contains
                        the service account manifest for CloudSQL. Only needed in
                        case you want to connect to a CloudSQL database via the cloud-sql-proxy<br/><br/>
                        Example: `documents-cloudsql-secret`'
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    type:
                      description: 'The type of this database. If type is `cloudsql`,
                        the operator will provision a Google CloudSQL database. If
                        type is `local`, the operator will deploy a local PostgreSQL
                        container<br/><br/> Possible Values: `cloudsql`, `local` <br/>
                        Example: `cloudsql`'
                      type: string
                  required:
                  - name
                  - type
                  - instanceDescriptor
                  - envPrefixes
                  - credentialsSecretRef
                  type: object
                type: array
              dcsaConfig:
                description: config element for DCSA support
                properties:
                  credentialsSecretRef:
                    description: 'This `secretRef` points to the secret that contains
                      the database credentials, i.e. username and password to connect
                      to the database. The secret itself should have a `username`
                      and a `password` key that have the related values. <br/><br/>
                      Example: `database-credentials-secret`'
                    properties:
                      name:
                        description: Name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: Namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                  instanceDescriptor:
                    description: 'The connection string that identifies this database.
                      Currently only JDBC URLs are supported <br/><br/> Example: `jdbc:postgresql://1.2.3.4:5432/documents-demo`'
                    type: string
                required:
                - instanceDescriptor
                - credentialsSecretRef
                type: object
              domain:
                description: 'the domain name under which this TribefireRuntime will
                  be reachable (via the Ingress). For instance, if the domain is set
                  to `tribefire.cloud` , the name of the runtime is `demo`, and the
                  namespace of the runtime is `documents`, then the TribefireRuntime
                  will be available via `https:/demo-documents.tribefire.cloud/` <br/><br/>
                  Possible values: any valid DNS name'
                type: string
            required:
            - components
            type: object
          status:
            properties:
              components:
                description: The list of `TribefireComponentStatus` information. For
                  details, see the docs on `TribefireComponentStatus`
                items:
                  properties:
                    name:
                      description: 'name of this component<br/><br/> Examples: `services`,
                        `control-center`'
                      type: string
                    status:
                      description: 'status of this component<br/><br/> Examples: `available`,
                        `unavailable`, `degraded`'
                      type: string
                    urls:
                      description: 'the URL(s) under which this component is reachable
                        from the outside (via the ingress)<br/><br/> Examples: `https://demo-documents.tribefire.cloud/services`,`https://demo-documents.tribefire.cloud/control-center`,'
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - status
                  type: object
                type: array
              conditions:
                description: the status conditions for this TribefireRuntime. For
                  details see the docs on the `TribefireRuntimeCondition`
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of deployment condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
              created:
                description: 'Timestamp (ISO8601) when this TribefireRuntime was created.
                  <br/><br/> Example: `2019-03-20T17:41:09Z`'
                type: string
              error:
                description: 'error status indicator. If set to `true`, somethings
                  wrong with this TribefireRuntime. <br/><br/> Possible values: `true`,
                  `false`'
                type: boolean
              observedGeneration:
                description: This field is used to track changes to the `TribefireRuntimeSpec`
                format: int64
                type: integer
              phase:
                description: 'the `DeploymentPhase` this TribefireRuntime is in. For
                  details see the docs on the `DeploymentPhase`<br/><br/> Example:
                  `DatabaseBootstrap`'
                type: string
              status:
                description: 'a descriptive status message, such as `available`<br/>
                  Example: `available`'
                type: string
              updated:
                description: 'Timestamp (ISO8601) when this TribefireRuntime was updated.
                  <br/><br/> Example: `2019-03-20T19:36:39ZZ`'
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
