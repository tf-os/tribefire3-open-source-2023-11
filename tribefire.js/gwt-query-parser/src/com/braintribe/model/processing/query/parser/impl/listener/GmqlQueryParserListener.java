// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
package com.braintribe.model.processing.query.parser.impl.listener;

import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.QueryContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.QueryTailOrderByContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.QueryTailPaginationContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.QueryTailWhereContext;
import com.braintribe.model.processing.query.parser.impl.autogenerated.GmqlParser.WhereConditionContext;
import com.braintribe.model.processing.query.parser.impl.context.ObjectCustomContext;
import com.braintribe.model.processing.query.parser.impl.context.OrderingCustomContext;
import com.braintribe.model.processing.query.parser.impl.context.QueryCustomContext;
import com.braintribe.model.processing.query.parser.impl.context.ValueCustomContext;
import com.braintribe.model.processing.query.parser.impl.context.basetype.DefaultCustomContext;
import com.braintribe.model.query.Ordering;
import com.braintribe.model.query.Paging;
import com.braintribe.model.query.Query;
import com.braintribe.model.query.Restriction;
import com.braintribe.model.query.conditions.Condition;

public abstract class GmqlQueryParserListener extends GmqlDateFunctionParserListener {

	@Override
	public void exitQuery(QueryContext ctx) {
		propagateChildResult(ctx);
	}

	@Override
	public void exitWhereCondition(WhereConditionContext ctx) {
		setValue(ctx, takeValue(ctx.booleanValueExpression()));
	}

	@Override
	public void exitQueryTailOrderBy(QueryTailOrderByContext ctx) {
		Query query = ((QueryCustomContext) getValue(ctx.getParent()).cast()).getReturnValue();
		if (ctx.orderBy() != null) {
			Ordering orderBy = ((OrderingCustomContext) takeValue(ctx.orderBy()).cast()).getReturnValue();
			query.setOrdering(orderBy);
		}
		setValue(ctx, new DefaultCustomContext(""));
	}

	@Override
	public void exitQueryTailWhere(QueryTailWhereContext ctx) {
		Query query = ((QueryCustomContext) getValue(ctx.getParent()).cast()).getReturnValue();
		Object condition = null;
		if (ctx.whereCondition() != null) {
			condition = ((ValueCustomContext<?>) takeValue(ctx.whereCondition()).cast()).getReturnValue();
		}
		Restriction restriction = query.getRestriction();
		if (restriction == null) {
			query.setRestriction($.restriction((Condition) condition, null));
		} else {
			restriction.setCondition((Condition) condition);
		}
		setValue(ctx, new DefaultCustomContext(""));
	}

	@Override
	public void exitQueryTailPagination(QueryTailPaginationContext ctx) {
		Query query = ((QueryCustomContext) getValue(ctx.getParent()).cast()).getReturnValue();
		Object pagination = null;
		if (ctx.pagination() != null) {
			pagination = ((ObjectCustomContext) takeValue(ctx.pagination()).cast()).getReturnValue();
		}
		Restriction restriction = query.getRestriction();
		if (restriction == null) {
			query.setRestriction($.restriction(null, (Paging) pagination));
		} else {
			restriction.setPaging((Paging) pagination);
		}
		setValue(ctx, new DefaultCustomContext(""));
	}
}
