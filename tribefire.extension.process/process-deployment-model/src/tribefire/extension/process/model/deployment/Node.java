// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
// 
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
/**
 * 
 * Copyright by Braintribe Technologies 
 * autogenerated code 
 *
 */

package tribefire.extension.process.model.deployment;

import java.util.List;

import com.braintribe.model.generic.annotation.Abstract;
import com.braintribe.model.generic.annotation.SelectiveInformation;
import com.braintribe.model.generic.reflection.EntityType;
import com.braintribe.model.generic.reflection.EntityTypes;

/**
 * a node reflects a state in the actual model
 * 
 * @author pit
 * 
 */
@SelectiveInformation("node: ${state}")
@Abstract
public interface Node extends ProcessElement, HasOverdueNode {

	EntityType<Node> T = EntityTypes.T(Node.class);
	
	String onEntered = "onEntered";
	String state = "state";
	
	List<TransitionProcessor> getOnEntered();
	void setOnEntered(List<TransitionProcessor> onEntered);

	Object getState();
	void setState(Object state);
}
