<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 ============================================================================
 Braintribe IT-Technologies GmbH - www.braintribe.com
 Copyright Braintribe IT-Technologies GmbH, Austria, 2002-2015 - All Rights Reserved
 It is strictly forbidden to copy, modify, distribute or use this code without written permission
 To this file the Braintribe License Agreement applies.
 ============================================================================
-->

<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:bt="antlib:com.braintribe.build.ant.tasks" basedir="." default="dist" name="devrock-ant-tasks">

		<bt:import artifact="com.braintribe.devrock.ant:library-ant-script#1.0" useCase="DEVROCK" />
		<target depends="clean,compile" description="generate the distribution" name="dist">
				<bt:dependencies filesetId="runtime.fileset" pathId="runtime.classpath" useScope="runtime">
					<bt:pom refid="pom.project"/>
				</bt:dependencies>
				<!-- Create the distribution directory -->
				<mkdir dir="${dist}/lib"/>
				<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
				<jar jarfile="${dist}/lib/${versionedName}.jar" duplicate="fail">
						<fileset dir="${build}"/>
						<fileset dir="${basedir}">
								<include name="*.config.xml"/>
								<include name="meta.spring.xml"/>
								<include name="templates/*.*"/>
								<include name="res/prettyPrint.xslt"/>
						</fileset>
						<fileset dir="${basedir}/res">
								<include name="FileClasspathClassloader-*.jar"/>
						</fileset>
				</jar>
				<jar basedir="${src}" jarfile="${dist}/${versionedName}-sources.jar"/>
				<copy todir="${dist}/lib">
						<resources refid="runtime.fileset"/>
						<mapper type="flatten"/>
				</copy>
		</target>

		<target depends="dist" name="toant">
				<echo message="Copying libs to ANT library folder..."/>
				<echo message="(Please note that old BT libraries that are no longer used by bt-ant-tasks cannot be deleted by this task and therefore have to be removed manually! Alternatively one can use the 'updateBtAntTasks' batch script."/>
				<property environment="env"/>
				<!-- Fails, because the ANT process can't delete its own libaries.
				<delete>
					<fileset dir="${env.ANT_HOME}/lib" includes="/bt.*.jar" />
				</delete>
				-->
				<copy todir="${env.ANT_HOME}/lib">
						<fileset dir="${dist}/lib">
								<include name="*.jar"/>
						</fileset>
						<mapper from="*" to="bt.*" type="glob"/>
				</copy>
		</target>

		<target depends="dist" name="assemble">
				<copy todir="${dist}/archive">
						<fileset dir="${dist}/lib">
								<include name="*.jar"/>
						</fileset>
						<mapper from="*" to="bt.*" type="glob"/>
				</copy>
				<zip destfile="${dist}/${versionedName}-libs.zip">
						<fileset dir="${dist}/archive"/>
				</zip>
				<mkdir dir="${dist}/assembled/"/>
				<copy file="${dist}/${versionedName}-libs.zip" tofile="${dist}/assembled/${pom.project.artifactId}.zip"/>
				<if>
					<and>
						<istrue value="${generateJavadoc}"/>
						<available file="${dist}/javadoc" type="dir"/>
					</and>
					<then>
						<jar basedir="${dist}/javadoc" jarFile="${dist}/${versionedName}-javadoc.jar"/>
					</then>
				</if>
		</target>

		<target name="install" depends="assemble">
			<presetdef name="bt.install-preset">
				<bt:install file="${dist}/lib/${versionedName}.jar">
					<pom refid="pom.project"/>
					<attach file="${dist}/${versionedName}-sources.jar" classifier="sources"/>
					<attach file="${dist}/${versionedName}-libs.zip" classifier="libs:zip"/>
				</bt:install>
			</presetdef>

			<if>
				<istrue value="${generateJavadoc}"/>
				<then>
					<bt.install-preset>
						<attach file="${dist}/${versionedName}-javadoc.jar" classifier="javadoc"/>
					</bt.install-preset>
				</then>
				<else>
					<bt.install-preset/>
				</else>
			</if>
		</target>

	<target name="publish" depends="init">
		<property name="increaseVersion" value="true" />
		<property name="skipGit" value="false" />

		<bt:publish usecase="DEVROCK" increaseVersion="${increaseVersion}" skipGit="${skipGit}">
			<pom refid="pom.project"/>
		</bt:publish>
	</target>
</project>
